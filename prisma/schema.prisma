// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id            Int     @id @default(autoincrement())
  PlayerName   String?
  Level         Int?
  Exp           Int?
  Ball          Int?
  Body          Int?
  Shirt         Int?
  Pant          Int?
  RingBall      Int?
  Money         Int?
  Hair          Int?
  TalentPoint  Int?
  IdAccount    String
  roomUsers   RoomUser[]
  playerItems PlayerItem[]
  histories   History[]
}


// SYSTEM
model Room {
  id              Int      @id @default(autoincrement())
  roomName        String    
  port            Int     
  maxPlayers      Int
  currentPlayers  Int
  roomUsers   RoomUser[]
}

model RoomUser {
  id      Int    @id @default(autoincrement())
  roomId  Int
  userId  Int
  joinedAt DateTime @default(now())


  player  Player  @relation(fields: [userId], references: [id]) // Quan hệ với bảng Player
  room    Room    @relation(fields: [roomId], references: [id]) // Quan hệ với bảng Room
   @@unique([roomId, userId]) // Đảm bảo mỗi người dùng chỉ có thể tham gia một phòng một lần
}

model Item {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  level       Int
  typeGid     Int     @map("Type_Gid")
  price       Int
  isLevelUp   Boolean @map("is_Level_Up")
  isOpen      Boolean
  locationGid Int     @map("Location_Gid")
  playerItems PlayerItem[]
}

model PlayerItem {
  id       Int  @id @default(autoincrement())
  playerId Int
  itemId   Int
  quantity Int  @default(1)

  player Player @relation(fields: [playerId], references: [id])
  item   Item   @relation(fields: [itemId], references: [id])

  @@unique([playerId, itemId])
}

model History {
  playerId     Int
  transdate    Int
  seq          Int
  opponentId   Int
  isWin        Boolean
  rounds       Int
  marbBet      Int
  marblesWon   Int
  marblesLost  Int
  expGained    Int
  description  String?
  createdAt    DateTime @default(now())
  
  player Player @relation(fields: [playerId], references: [id])
  @@id([playerId, transdate, seq])
}
